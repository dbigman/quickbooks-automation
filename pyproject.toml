[project]
name = "quickbooks-auto-reporter"
version = "2.0.0"
description = "Automated multi-report generation for QuickBooks Desktop with scheduled execution and professional Excel formatting"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "Proprietary"}
authors = [
    {name = "Your Organization"}
]
keywords = ["quickbooks", "reporting", "automation", "excel", "qbxml"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Financial and Insurance Industry",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial :: Accounting",
]

dependencies = [
    # QuickBooks COM integration (Windows only)
    "pywin32>=305",
    
    # Excel export functionality
    "openpyxl>=3.0.0",
    
    # Data validation
    "pydantic>=2.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.12.0",
    "ruff>=0.1.0",
    "black>=22.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "types-openpyxl>=3.0.0",
]
build = [
    "pyinstaller>=5.0",
]

[project.scripts]
qb-auto-reporter-cli = "apps.cli.__main__:main"
qb-auto-reporter-gui = "apps.gui.__main__:main"

[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src", "apps"]
include = ["quickbooks_autoreport*", "apps*"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--tb=short",
    "--cov=src/quickbooks_autoreport",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
]

[tool.coverage.run]
source = ["src/quickbooks_autoreport"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 88
target-version = "py38"
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg-info",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # unused imports in __init__.py
"tests/*" = ["B011"]  # assert False

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip_glob = ["*/migrations/*", "*/build/*", "*/dist/*"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
strict_equality = true
files = ["src", "apps", "tests"]

[[tool.mypy.overrides]]
module = "win32com.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pythoncom"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pywintypes"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "openpyxl.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tkinter.*"
ignore_missing_imports = true
